/********************************************************************
 * Copyright (C) 2016 上海洋码头网络技术有限公司. All Rights Reserved.
 *
 * @author tongliang
 * @email tongliang@ymatou.com
 * @date 2016/3/16
 *
 ********************************************************************
 */

var request = require("request");
var assert = require('assert');

/**
 * 检查accesstoken
 * @param accesstoken
 * @param callback
 * @returns {*}
 */
function checkAccesstoken(accessToken, callback) {
    if (typeof accessToken !== 'string') return callback(new Error('token error'), -1);
    request({
        url: 'http://auth.ymatou.com/json/reply/SignAuthRequestDto',
        qs: {
            Token: accessToken
        },
        method: 'get',
        headers: {
            'User-Agent': 'ymt-node-auth'
        },
    }, function (err, response, body) {
        if (!err && response && response.statusCode == 200) {
            try {
                body = JSON.parse(body);
            }
            catch (e) {
                body = {};
            }
            var result = body["Result"] || {};
            var userid = (result["UserData"] || {})["UserId"] || -1;
            callback(err, userid);
        }
        else callback(err, -1);
    });
}

module.exports = {
    checkAuth: function (req, res, next) {
        assert(req.appInfo, 'appInfo is necessary');
        var userid = req.appInfo.userId || -1;
        var accessToken = req.appInfo.accessToken || "";
        if (userid <= 0 || accessToken == "") {
            if (res.authError) return res.authError("权限错误");
            return next(new Error("权限错误"));
        }
        checkAccesstoken(accessToken, function (err, result) {
            if (err) return next(new Error('身份认证服务异常'));
            var isLogin = result > 0 && result == userid;
            if (!isLogin) {
                if (res.authError) return res.authError("权限错误");
                return next(new Error("权限错误"));
            }
            next();
        });

    },
    getAuth: function (req, res, next) {
        assert(req.appInfo, 'appInfo is necessary');
        var userid = req.appInfo.userId || -1;
        var accessToken = req.appInfo.accessToken || "";
        if (userid <= 0 || accessToken == "") {
            req.isLogin = false;
            return next();
        }
        checkAccesstoken(accessToken, function (err, result) {
            if (err) return next(new Error('身份认证服务异常'));
            var isLogin = result > 0 && result == userid;
            req.isLogin = isLogin;
            next();
        });
    }

};