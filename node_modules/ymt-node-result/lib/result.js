/********************************************************************
 * Copyright (C) 2016 上海洋码头网络技术有限公司. All Rights Reserved.
 *
 * @author tongliang
 * @email tongliang@ymatou.com
 * @date 2016/3/16
 *
 ********************************************************************
 */

var util = require('util');
var xml2js = require('xml2js');
var xmlBuilder = new xml2js.Builder({rootName: "ymt"});
var moment = require('moment');
var queryString = require('querystring');

/**
 * 错误枚举
 * @type {{success: number, parameterError: number, authorizeError: number, businessError: number}}
 */
var enumError = {
  /**
   * 成功
   */
  success: 200,
  /**
   * 参数错误
   */
  parameterError: 400,
  /**
   * 权限错误,没有授权或者没有权限
   */
  authorizeError: 401,
  /**
   * 业务异常
   */
  businessError: 500
};

module.exports = function () {
  var _cusResult = function (Status, Msg) {
    return {
      status: Status,
      msg: Msg,
    };
  };
  /**
   * 成功
   * @param req
   * @param res
   * @returns {Function}
   * @private
   */
  var _success = function (req, res) {
    return function (result) {
      res.send(result);
    };
  };
  /**
   * 业务错误
   * @param req
   * @param res
   * @returns {Function}
   * @private
   */
  var _businessError = function (req, res) {
    return function (message, result) {
      res.send(_cusResult.apply(null, [enumError.businessError, message, result]));
    };
  };
  /**
   * 权限错误
   * @param req
   * @param res
   * @returns {Function}
   * @private
   */
  var _authorizeError = function (req, res) {
    return function (message, result) {
      res.send(_cusResult.apply(null, [enumError.authorizeError, message, result]));
    };
  };
  /**
   * 自定义错误
   * @param req
   * @param res
   * @returns {Function}
   * @private
   */
  var _customError = function (req, res) {
    return function (status, message, result) {
      res.send(_cusResult.apply(null, [status, message, result]));
    };
  };
  var _formatters = {
    'xml': function (req, res, body, cb) {
      var xml = xmlBuilder.buildObject(body);
      return cb(null, xml);
    }
  };

  /**
   * 从req中获取ymt参数
   * @param req
   * @private
   */
  var _ymtParams = function (req) {
    if (!req.headers) req.headers = {};
    try {
      var ymtParams = queryString.parse(req.headers['ymt_pars'] || '');
    } catch (e) {
      ymtParams = {};
    }
    return ymtParams;
  };

  return function (req, res, next) {
    var ymtParams = _ymtParams(req);
    //output format
    if (ymtParams.format == "xml") {
      res.setHeader('content-type', 'application/xml');
      res.formatters = {
        "application/xml": _formatters.xml
      }
    }
    else if (ymtParams.format == "jsonp") {
      if (req.query.callback || req.query.jsonp) {
        res.setHeader('Content-Type', 'application/javascript');
      }
      //copy req.query to req.body
      if (req.query) {
        if (!req.body) req.body = {};
        for (var key in req.query) {
          req.body[key] = req.query[key];
        }
      }
    }

    res.success = _success(req, res);
    res.businessError = _businessError(req, res);
    res.authError = _authorizeError(req, res);
    res.customError = _customError(req, res);
    next();
  };
};
